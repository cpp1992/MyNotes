1.状态码：http://www.cnblogs.com/li0803/archive/2008/11/03/1324746.html
2.选择器：
3.单线程：settimeout 阻塞
4.闭包：函数作为返回值：函数A里面返回一个B匿名函数，调用A时用一个变量来接受B的返回值；函数作为参数：B是一个函数，(funcA(){})(funcB)
	IIFE，立即调用表达式
5.前端技术：
项目中达到了什么效果？用了什么技术手段，为什么用它，原理是什么。
你现在回看，除了这种方案你还有什么更好的解决方案吗？那知道这种新方案的原理或实现过程吗，大概讲一下？
session和cookie的区别？
cookie 和session 的区别：
1、cookie数据存放在客户的浏览器上，session数据放在服务器上。
2、cookie不是很安全，别人可以分析存放在本地的COOKIE并进行COOKIE欺骗
   考虑到安全应当使用session。
3、session会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能
   考虑到减轻服务器性能方面，应当使用COOKIE。
4、单个cookie保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20个cookie。
5、所以个人建议：
   将登陆信息等重要信息存放为SESSION
   其他信息如果需要保留，可以放在COOKIE中

说一下快速排序的原理？
HTTP报文包含内容？
TCP/IP三次握手？
垃圾回收？
你对怪异模式的理解


前端常见算法的JS实现
https://segmentfault.com/a/1190000008593715


常见前端面试题
https://juejin.im/collection/58b51f146a22657a386988f3


Canvas
依赖分辨率
不支持事件处理器
弱的文本渲染能力
能够以 .png 或 .jpg 格式保存结果图像
最适合图像密集型的游戏，其中的许多对象会被频繁重绘
SVG
不依赖分辨率
支持事件处理器
最适合带有大型渲染区域的应用程序（比如谷歌地图）
复杂度高会减慢渲染速度（任何过度使用 DOM 的应用都不快）
不适合游戏应用


总的来说，canvas比较新的技术，基于位图，是苹果爸爸的产品发展来的，功能简单，有API供js直接使用，适合动态渲染和大量数据绘制，而SVG比较适合做静态的高保真的矢量图形的应用，它可以非常好的处理图形大小的改变。总之这两个相爱相杀这么多年，我想到了一句话，存在即合理。与其问有什么不同，不如问他们的适用场景。

对于开发人员而言，最直观的区别在于：
1.对于画在Canvas上的部件，你需要处理重绘。而SVG则不用，你修改svg dom则系统会自动帮你重绘
2.Hittest，即canvas不负责帮你侦测鼠标/触摸事件发生在哪一个图形元件上；而svg可以。
3.Canvas效率高得多

作者：Alex Zhao
链接：https://www.zhihu.com/question/19690014/answer/16492033
来源：知乎
著作权归作者所有，转载请联系作者获得授权。